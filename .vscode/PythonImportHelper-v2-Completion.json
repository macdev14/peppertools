[
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "token_verify",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "BasePermission",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "SAFE_METHODS",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "pepperadmin.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "isExtraImport": true,
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "isExtraImport": true,
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "jwt",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jwt",
        "description": "jwt",
        "detail": "jwt",
        "documentation": {}
    },
    {
        "label": "api_settings",
        "importPath": "rest_framework_jwt.settings",
        "description": "rest_framework_jwt.settings",
        "isExtraImport": true,
        "detail": "rest_framework_jwt.settings",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "django.core.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MaxValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "localflavor.br.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "localflavor.br.models",
        "description": "localflavor.br.models",
        "detail": "localflavor.br.models",
        "documentation": {}
    },
    {
        "label": "BRCPFField",
        "importPath": "localflavor.br.models",
        "description": "localflavor.br.models",
        "isExtraImport": true,
        "detail": "localflavor.br.models",
        "documentation": {}
    },
    {
        "label": "BRCNPJField",
        "importPath": "localflavor.br.models",
        "description": "localflavor.br.models",
        "isExtraImport": true,
        "detail": "localflavor.br.models",
        "documentation": {}
    },
    {
        "label": "BRPostalCodeField",
        "importPath": "localflavor.br.models",
        "description": "localflavor.br.models",
        "isExtraImport": true,
        "detail": "localflavor.br.models",
        "documentation": {}
    },
    {
        "label": "BRStateField",
        "importPath": "localflavor.br.models",
        "description": "localflavor.br.models",
        "isExtraImport": true,
        "detail": "localflavor.br.models",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "now",
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "isExtraImport": true,
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "activate",
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "isExtraImport": true,
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "peppertools.settings",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "isExtraImport": true,
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "ugettext_lazy",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "ugettext_lazy",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "DjangoObjectActions",
        "importPath": "django_object_actions",
        "description": "django_object_actions",
        "isExtraImport": true,
        "detail": "django_object_actions",
        "documentation": {}
    },
    {
        "label": "qrcode",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "qrcode",
        "description": "qrcode",
        "detail": "qrcode",
        "documentation": {}
    },
    {
        "label": "qrcode.image.svg",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "qrcode.image.svg",
        "description": "qrcode.image.svg",
        "detail": "qrcode.image.svg",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "StringIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "PDFTemplateView",
        "importPath": "easy_pdf.views",
        "description": "easy_pdf.views",
        "isExtraImport": true,
        "detail": "easy_pdf.views",
        "documentation": {}
    },
    {
        "label": "PDFTemplateResponseMixin",
        "importPath": "easy_pdf.views",
        "description": "easy_pdf.views",
        "isExtraImport": true,
        "detail": "easy_pdf.views",
        "documentation": {}
    },
    {
        "label": "render_to_pdf",
        "importPath": "easy_pdf.rendering",
        "description": "easy_pdf.rendering",
        "isExtraImport": true,
        "detail": "easy_pdf.rendering",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "pisa",
        "importPath": "xhtml2pdf",
        "description": "xhtml2pdf",
        "isExtraImport": true,
        "detail": "xhtml2pdf",
        "documentation": {}
    },
    {
        "label": "get_template",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "Context",
        "importPath": "django.template",
        "description": "django.template",
        "isExtraImport": true,
        "detail": "django.template",
        "documentation": {}
    },
    {
        "label": "escape",
        "importPath": "html",
        "description": "html",
        "isExtraImport": true,
        "detail": "html",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "dj_database_url",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "dj_database_url",
        "description": "dj_database_url",
        "detail": "dj_database_url",
        "documentation": {}
    },
    {
        "label": "django_heroku",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django_heroku",
        "description": "django_heroku",
        "detail": "django_heroku",
        "documentation": {}
    },
    {
        "label": "i18n_patterns",
        "importPath": "django.conf.urls.i18n",
        "description": "django.conf.urls.i18n",
        "isExtraImport": true,
        "detail": "django.conf.urls.i18n",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "warnings",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "warnings",
        "description": "warnings",
        "detail": "warnings",
        "documentation": {}
    },
    {
        "label": "management",
        "importPath": "django.core",
        "description": "django.core",
        "isExtraImport": true,
        "detail": "django.core",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "ApiConfig",
        "kind": 6,
        "importPath": "api.apps",
        "description": "api.apps",
        "peekOfCode": "class ApiConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'api'",
        "detail": "api.apps",
        "documentation": {}
    },
    {
        "label": "IsOwnerOrReadOnly",
        "kind": 6,
        "importPath": "api.permissions",
        "description": "api.permissions",
        "peekOfCode": "class IsOwnerOrReadOnly(permissions.BasePermission):\n    \"\"\"\n    Custom permission to only allow owners of an object to edit it.\n    \"\"\"\n    def has_object_permission(self, request, view, obj):\n        # Read permissions are allowed to any request,\n        # so we'll always allow GET, HEAD or OPTIONS requests.\n        if token_verify(request.methodheaders['Authorization']):\n            return True\n        # Write permissions are only allowed to the owner of the snippet.",
        "detail": "api.permissions",
        "documentation": {}
    },
    {
        "label": "IsOwnerProfileOrReadOnly",
        "kind": 6,
        "importPath": "api.permissions",
        "description": "api.permissions",
        "peekOfCode": "class IsOwnerProfileOrReadOnly(BasePermission):\n    def has_object_permission(self, request, view, obj):\n        print(obj)\n        if request.method in SAFE_METHODS:\n            return True\n        return obj.user==request.user",
        "detail": "api.permissions",
        "documentation": {}
    },
    {
        "label": "ProcessoSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class ProcessoSerializer(serializers.HyperlinkedModelSerializer, TokenObtainPairSerializer):\n    class Meta:\n        model = Processo\n        fields = ('Nome', 'Tempo_Objetivo')\nclass HistoricoSerializer(serializers.ModelSerializer):\n    ostok = serializers.SerializerMethodField(read_only=True)\n    def get_ostok(self, obj):\n        print(self.context['request'].data['os'])\n        try:\n            url = self.context['request'].data['os']",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "HistoricoSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class HistoricoSerializer(serializers.ModelSerializer):\n    ostok = serializers.SerializerMethodField(read_only=True)\n    def get_ostok(self, obj):\n        print(self.context['request'].data['os'])\n        try:\n            url = self.context['request'].data['os']\n            if 'http' in url:\n                token = url[37:]\n            else:\n                token = url",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "Cadastro_OS_Serializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class Cadastro_OS_Serializer(serializers.HyperlinkedModelSerializer):\n    class Meta:\n        model = Cadastro_OS\n        fields = ('STATUS',)\n'''\nclass UserLoginSerializer(serializers.Serializer):\n    username = serializers.CharField(max_length=255)\n    password = serializers.CharField(max_length=128, write_only=True)\n    token = serializers.CharField(max_length=255, read_only=True)\n    def validate(self, data):",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "UserLoginSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class UserLoginSerializer(serializers.Serializer):\n    username = serializers.CharField(max_length=255)\n    password = serializers.CharField(max_length=128, write_only=True)\n    token = serializers.CharField(max_length=255, read_only=True)\n    def validate(self, data):\n        username = data.get(\"username\", None)\n        password = data.get(\"password\", None)\n        user = authenticate(username=username, password=password)\n        if user is None:\n            raise serializers.ValidationError(",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "JWT_PAYLOAD_HANDLER",
        "kind": 5,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "JWT_PAYLOAD_HANDLER = api_settings.JWT_PAYLOAD_HANDLER\nJWT_ENCODE_HANDLER = api_settings.JWT_ENCODE_HANDLER\n'''\nclass ProcessoSerializer(serializers.HyperlinkedModelSerializer, TokenObtainPairSerializer):\n    class Meta:\n        model = Processo\n        fields = ('Nome', 'Tempo_Objetivo')\nclass HistoricoSerializer(serializers.ModelSerializer):\n    ostok = serializers.SerializerMethodField(read_only=True)\n    def get_ostok(self, obj):",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "JWT_ENCODE_HANDLER",
        "kind": 5,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "JWT_ENCODE_HANDLER = api_settings.JWT_ENCODE_HANDLER\n'''\nclass ProcessoSerializer(serializers.HyperlinkedModelSerializer, TokenObtainPairSerializer):\n    class Meta:\n        model = Processo\n        fields = ('Nome', 'Tempo_Objetivo')\nclass HistoricoSerializer(serializers.ModelSerializer):\n    ostok = serializers.SerializerMethodField(read_only=True)\n    def get_ostok(self, obj):\n        print(self.context['request'].data['os'])",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "OSserializer",
        "kind": 6,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "class OSserializer(TokenObtainPairSerializer):\n    @classmethod\n    def get_token(cls, user):\n        token = super().get_token(user)\n        print(user.password)\n        return token\nclass CustomTokenObtainPairView(TokenObtainPairView):\n    # Replace the serializer with your custom\n    serializer_class = OSserializer\nurlpatterns = [",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "CustomTokenObtainPairView",
        "kind": 6,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "class CustomTokenObtainPairView(TokenObtainPairView):\n    # Replace the serializer with your custom\n    serializer_class = OSserializer\nurlpatterns = [\n    path('app/api/login', CustomTokenObtainPairView.as_view(), name='token_obtain_pair'),\n    path('token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n    path('', include(router.urls)),\n    path('', include('rest_framework.urls', namespace='rest_framework'))\n]",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "router = routers.DefaultRouter()\nrouter.register(r'processos', views.ProcViewSet)\nrouter.register(r'historico_os', views.HistoricalView)\nrouter.register(r'ordem_de_servico', views.Cadastro_OSView)\n# Wire up our API using automatic URL routing.\n# Additionally, we include login URLs for the browsable API.\nclass OSserializer(TokenObtainPairSerializer):\n    @classmethod\n    def get_token(cls, user):\n        token = super().get_token(user)",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "urlpatterns = [\n    path('app/api/login', CustomTokenObtainPairView.as_view(), name='token_obtain_pair'),\n    path('token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n    path('', include(router.urls)),\n    path('', include('rest_framework.urls', namespace='rest_framework'))\n]",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "ProcViewSet",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ProcViewSet(viewsets.ModelViewSet):\n    permission_classes = [IsAuthenticated]\n    queryset = Processo.objects.all().order_by('Nome')\n    serializer_class = ProcessoSerializer\nclass HistoricalView(viewsets.ModelViewSet):\n    permission_classes = [IsAuthenticated, IsOwnerProfileOrReadOnly]\n    queryset = Historico_Os.objects.all().order_by('id')\n    serializer_class = HistoricoSerializer\n    print(serializer_class.data)\nclass Cadastro_OSView(viewsets.ModelViewSet):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "HistoricalView",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class HistoricalView(viewsets.ModelViewSet):\n    permission_classes = [IsAuthenticated, IsOwnerProfileOrReadOnly]\n    queryset = Historico_Os.objects.all().order_by('id')\n    serializer_class = HistoricoSerializer\n    print(serializer_class.data)\nclass Cadastro_OSView(viewsets.ModelViewSet):\n    permission_classes = [IsAuthenticated]\n    queryset = Cadastro_OS.objects.all().order_by('Numero_Os')\n    serializer_class = Cadastro_OS_Serializer\nclass LongLoginView(APIView):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Cadastro_OSView",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Cadastro_OSView(viewsets.ModelViewSet):\n    permission_classes = [IsAuthenticated]\n    queryset = Cadastro_OS.objects.all().order_by('Numero_Os')\n    serializer_class = Cadastro_OS_Serializer\nclass LongLoginView(APIView):\n    permission_classes = (IsAuthenticated,)\n    def get(self, request):\n        content = {'message': 'Hello, World!'}\n        return Response(content)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "LongLoginView",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class LongLoginView(APIView):\n    permission_classes = (IsAuthenticated,)\n    def get(self, request):\n        content = {'message': 'Hello, World!'}\n        return Response(content)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0001_initial",
        "description": "pepperadmin.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Cliente',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('cnpj', localflavor.br.models.BRCNPJField(blank=True, db_column='cnpj', max_length=18, null=True)),",
        "detail": "pepperadmin.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0002_auto_20210523_2040",
        "description": "pepperadmin.migrations.0002_auto_20210523_2040",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='orcamento',\n            name='ano',\n            field=models.IntegerField(db_column='ano', default=pepperadmin.models.max_value_current_year, validators=[django.core.validators.MinValueValidator(1984), pepperadmin.models.max_value_current_year], verbose_name='ano'),\n        ),",
        "detail": "pepperadmin.migrations.0002_auto_20210523_2040",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0003_auto_20210523_2043",
        "description": "pepperadmin.migrations.0003_auto_20210523_2043",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0002_auto_20210523_2040'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='orcamento',\n            name='ano',\n            field=models.IntegerField(db_column='ano', default=2021, validators=[django.core.validators.MinValueValidator(1984), pepperadmin.models.max_value_current_year], verbose_name='ano'),\n        ),",
        "detail": "pepperadmin.migrations.0003_auto_20210523_2043",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0004_auto_20210523_2045",
        "description": "pepperadmin.migrations.0004_auto_20210523_2045",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0003_auto_20210523_2043'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='item',\n            old_name='material_item',\n            new_name='material',\n        ),",
        "detail": "pepperadmin.migrations.0004_auto_20210523_2045",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0005_auto_20210523_2050",
        "description": "pepperadmin.migrations.0005_auto_20210523_2050",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0004_auto_20210523_2045'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cadastro_os',\n            name='Tipo',\n            field=models.TextField(blank=True, choices=[('fabricacao', 'fabricação'), ('afiacao', 'afiação')], db_column='Tipo', default='fabricacao', null=True),\n        ),",
        "detail": "pepperadmin.migrations.0005_auto_20210523_2050",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0006_auto_20210523_2053",
        "description": "pepperadmin.migrations.0006_auto_20210523_2053",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0005_auto_20210523_2050'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cadastro_os',\n            name='Tipo',\n            field=models.TextField(blank=True, choices=[('afiacao', 'afiação'), ('fabricacao', 'fabricação'), ('modificacao', 'modificação')], db_column='Tipo', default='afiacao', null=True),\n        ),",
        "detail": "pepperadmin.migrations.0006_auto_20210523_2053",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0007_auto_20210523_2054",
        "description": "pepperadmin.migrations.0007_auto_20210523_2054",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0006_auto_20210523_2053'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cadastro_os',\n            name='Tipo',\n            field=models.TextField(blank=True, choices=[('afiacao', 'afiação'), ('fabricacao', 'fabricação'), ('modificacao', 'modificação'), ('reconstrucao', 'reconstrução')], db_column='Tipo', default='afiacao', null=True),\n        ),",
        "detail": "pepperadmin.migrations.0007_auto_20210523_2054",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0008_auto_20210523_2056",
        "description": "pepperadmin.migrations.0008_auto_20210523_2056",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0007_auto_20210523_2054'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cadastro_os',\n            name='Tipo',\n            field=models.TextField(blank=True, choices=[('afiacao', 'afiação'), ('fabricacao', 'fabricação'), ('subfabricacao', 'subfabricação'), ('modificacao', 'modificação'), ('reconstrucao', 'reconstrução')], db_column='Tipo', default='afiacao', null=True),\n        ),",
        "detail": "pepperadmin.migrations.0008_auto_20210523_2056",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0009_auto_20210523_2057",
        "description": "pepperadmin.migrations.0009_auto_20210523_2057",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0008_auto_20210523_2056'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='material',\n            options={'verbose_name': 'Materiai'},\n        ),\n    ]",
        "detail": "pepperadmin.migrations.0009_auto_20210523_2057",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0010_alter_material_options",
        "description": "pepperadmin.migrations.0010_alter_material_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0009_auto_20210523_2057'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='material',\n            options={},\n        ),\n    ]",
        "detail": "pepperadmin.migrations.0010_alter_material_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0011_alter_material_options",
        "description": "pepperadmin.migrations.0011_alter_material_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0010_alter_material_options'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='material',\n            options={'verbose_name_plural': 'Materiais'},\n        ),\n    ]",
        "detail": "pepperadmin.migrations.0011_alter_material_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0012_alter_item_options",
        "description": "pepperadmin.migrations.0012_alter_item_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0011_alter_material_options'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='item',\n            options={'verbose_name_plural': 'Itens'},\n        ),\n    ]",
        "detail": "pepperadmin.migrations.0012_alter_item_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0013_auto_20210524_2021",
        "description": "pepperadmin.migrations.0013_auto_20210524_2021",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0012_alter_item_options'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Processos',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('Nome', models.CharField(blank=True, db_column='Nome', max_length=254, null=True)),",
        "detail": "pepperadmin.migrations.0013_auto_20210524_2021",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0014_alter_material_custo",
        "description": "pepperadmin.migrations.0014_alter_material_custo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0013_auto_20210524_2021'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='material',\n            name='custo',\n            field=models.IntegerField(blank=True, db_column='custo', null=True),\n        ),",
        "detail": "pepperadmin.migrations.0014_alter_material_custo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0015_alter_historico_os_os",
        "description": "pepperadmin.migrations.0015_alter_historico_os_os",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0014_alter_material_custo'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='historico_os',\n            name='os',\n            field=models.ForeignKey(blank=True, db_column='id_os', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='os_proc', to='pepperadmin.cadastro_os', verbose_name='Ordem de Serviço'),\n        ),",
        "detail": "pepperadmin.migrations.0015_alter_historico_os_os",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0016_alter_historico_os_os",
        "description": "pepperadmin.migrations.0016_alter_historico_os_os",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0015_alter_historico_os_os'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='historico_os',\n            name='os',\n            field=models.ForeignKey(blank=True, db_column='id_os', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_os', to='pepperadmin.cadastro_os', verbose_name='Ordem de Serviço'),\n        ),",
        "detail": "pepperadmin.migrations.0016_alter_historico_os_os",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0017_auto_20210526_1740",
        "description": "pepperadmin.migrations.0017_auto_20210526_1740",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0016_alter_historico_os_os'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='historico_os',\n            options={'verbose_name': 'Localização O.S', 'verbose_name_plural': 'Localizar O.S'},\n        ),\n        migrations.AlterField(",
        "detail": "pepperadmin.migrations.0017_auto_20210526_1740",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0018_auto_20210527_1217",
        "description": "pepperadmin.migrations.0018_auto_20210527_1217",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0017_auto_20210526_1740'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cliente',\n            name='celular',\n            field=models.CharField(blank=True, db_column='celular', max_length=254, null=True),\n        ),",
        "detail": "pepperadmin.migrations.0018_auto_20210527_1217",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0019_alter_cliente_ie",
        "description": "pepperadmin.migrations.0019_alter_cliente_ie",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0018_auto_20210527_1217'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cliente',\n            name='ie',\n            field=models.CharField(blank=True, db_column='ie', max_length=254, null=True),\n        ),",
        "detail": "pepperadmin.migrations.0019_alter_cliente_ie",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0020_alter_cliente_cod_cli",
        "description": "pepperadmin.migrations.0020_alter_cliente_cod_cli",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0019_alter_cliente_ie'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cliente',\n            name='cod_cli',\n            field=models.CharField(blank=True, db_column='cod_cli', default='', max_length=50, null=True),\n        ),",
        "detail": "pepperadmin.migrations.0020_alter_cliente_cod_cli",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0021_alter_cliente_endereco",
        "description": "pepperadmin.migrations.0021_alter_cliente_endereco",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0020_alter_cliente_cod_cli'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cliente',\n            name='endereco',\n            field=models.CharField(blank=True, db_column='endereco', max_length=512, null=True),\n        ),",
        "detail": "pepperadmin.migrations.0021_alter_cliente_endereco",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0022_alter_cliente_endereco",
        "description": "pepperadmin.migrations.0022_alter_cliente_endereco",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0021_alter_cliente_endereco'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cliente',\n            name='endereco',\n            field=models.TextField(blank=True, db_column='endereco', null=True),\n        ),",
        "detail": "pepperadmin.migrations.0022_alter_cliente_endereco",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0023_alter_cliente_nome",
        "description": "pepperadmin.migrations.0023_alter_cliente_nome",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0022_alter_cliente_endereco'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cliente',\n            name='nome',\n            field=models.CharField(blank=True, db_column='nome', max_length=500, null=True),\n        ),",
        "detail": "pepperadmin.migrations.0023_alter_cliente_nome",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0024_alter_cliente_cidade",
        "description": "pepperadmin.migrations.0024_alter_cliente_cidade",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0023_alter_cliente_nome'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cliente',\n            name='cidade',\n            field=models.CharField(blank=True, db_column='cidade', max_length=120, null=True),\n        ),",
        "detail": "pepperadmin.migrations.0024_alter_cliente_cidade",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0025_auto_20210528_1854",
        "description": "pepperadmin.migrations.0025_auto_20210528_1854",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0024_alter_cliente_cidade'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='Processos',\n            new_name='Processo',\n        ),\n        migrations.RemoveField(",
        "detail": "pepperadmin.migrations.0025_auto_20210528_1854",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0026_auto_20210528_1938",
        "description": "pepperadmin.migrations.0026_auto_20210528_1938",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0025_auto_20210528_1854'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Fornecedor',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('cnpj', localflavor.br.models.BRCNPJField(blank=True, db_column='cnpj', max_length=18, null=True)),",
        "detail": "pepperadmin.migrations.0026_auto_20210528_1938",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0027_auto_20210529_1134",
        "description": "pepperadmin.migrations.0027_auto_20210529_1134",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0026_auto_20210528_1938'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cadastro_os',\n            name='Data',\n            field=models.DateField(blank=True, db_column='Data', default=django.utils.timezone.now, max_length=50, null=True),\n        ),",
        "detail": "pepperadmin.migrations.0027_auto_20210529_1134",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0028_alter_cadastro_os_unidade",
        "description": "pepperadmin.migrations.0028_alter_cadastro_os_unidade",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0027_auto_20210529_1134'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cadastro_os',\n            name='unidade',\n            field=models.CharField(blank=True, choices=[('Peça', 'Peça'), ('Jogo', 'Jogo')], db_column='unidade', default='peca', max_length=50, null=True),\n        ),",
        "detail": "pepperadmin.migrations.0028_alter_cadastro_os_unidade",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pepperadmin.migrations.0029_alter_cadastro_os_material",
        "description": "pepperadmin.migrations.0029_alter_cadastro_os_material",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pepperadmin', '0028_alter_cadastro_os_unidade'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cadastro_os',\n            name='Material',\n            field=models.CharField(blank=True, db_column='Material', max_length=50, null=True),\n        ),",
        "detail": "pepperadmin.migrations.0029_alter_cadastro_os_material",
        "documentation": {}
    },
    {
        "label": "renderOS",
        "kind": 6,
        "importPath": "pepperadmin.admin",
        "description": "pepperadmin.admin",
        "peekOfCode": "class renderOS(PDFTemplateView, PDFTemplateResponseMixin):\n    model = Cadastro_OS\n    template_name = 'pepperadmin/os.html'\n    encoding = \"utf-8\",\nclass osModel(DjangoObjectActions, admin.ModelAdmin):\n    list_display=('Numero_Os','Cliente','Tipo','Quantidade')\n    search_fields = ('Numero_Os', 'Especificacao' )\n    readonly_fields=('Data',)\n    def printos(self, request, obj):\n        codyear = str(obj.Data.year)",
        "detail": "pepperadmin.admin",
        "documentation": {}
    },
    {
        "label": "osModel",
        "kind": 6,
        "importPath": "pepperadmin.admin",
        "description": "pepperadmin.admin",
        "peekOfCode": "class osModel(DjangoObjectActions, admin.ModelAdmin):\n    list_display=('Numero_Os','Cliente','Tipo','Quantidade')\n    search_fields = ('Numero_Os', 'Especificacao' )\n    readonly_fields=('Data',)\n    def printos(self, request, obj):\n        codyear = str(obj.Data.year)\n        obj.Data_digit = codyear[-2:]\n        osid = obj.id\n        qr = jwt.encode({'osid': osid }, peppertools.settings.SECRET_KEY)\n        print(qr)",
        "detail": "pepperadmin.admin",
        "documentation": {}
    },
    {
        "label": "ClienteModel",
        "kind": 6,
        "importPath": "pepperadmin.admin",
        "description": "pepperadmin.admin",
        "peekOfCode": "class ClienteModel(admin.ModelAdmin):\n    list_display=('nome','cnpj','telefone')\n    search_fields = ('nome', 'cnpj')\nadmin.site.register(Cliente, ClienteModel)\nadmin.site.register(Cadastro_OS, osModel)\nadmin.site.register(Item)\nadmin.site.register(Orcamento)\nadmin.site.register(Linha)\nadmin.site.register(Material)\nadmin.site.register(Historico_Os)",
        "detail": "pepperadmin.admin",
        "documentation": {}
    },
    {
        "label": "PepperadminConfig",
        "kind": 6,
        "importPath": "pepperadmin.apps",
        "description": "pepperadmin.apps",
        "peekOfCode": "class PepperadminConfig(AppConfig):\n    name = 'pepperadmin'",
        "detail": "pepperadmin.apps",
        "documentation": {}
    },
    {
        "label": "Tipo",
        "kind": 6,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "class Tipo(models.Model):\n    nome = models.CharField(max_length=254)\n    quantidade = models.IntegerField()\n    def __str__(self):\n        return self.nome\n    class Meta:\n        db_table = \"Tipo\"\nclass Cliente(models.Model):\n    cnpj =  BRCNPJField(blank=True, max_length=254, null=True, db_column='cnpj')\n    nome = models.CharField(blank=True, null=True, max_length=500, db_column='nome')",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "kind": 6,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "class Cliente(models.Model):\n    cnpj =  BRCNPJField(blank=True, max_length=254, null=True, db_column='cnpj')\n    nome = models.CharField(blank=True, null=True, max_length=500, db_column='nome')\n    email = models.EmailField(blank=True, null=True, max_length=254, db_column='email')\n    telefone = models.CharField(blank=True, null=True,  max_length=254, db_column='telefone')\n    celular = models.CharField(blank=True, null=True,  max_length=254, db_column='celular')\n    cod_cli = models.CharField(blank=True, null=True, max_length=50, default='', db_column='cod_cli')\n    fax =  models.CharField(blank=True, null=True, max_length=50, db_column='fax')\n    ie = models.CharField(blank=True, null=True, max_length=254, db_column='ie')\n    cep = BRPostalCodeField(blank=True, null=True, db_column='cep')",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "Fornecedor",
        "kind": 6,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "class Fornecedor(models.Model):\n    cnpj =  BRCNPJField(blank=True, max_length=254, null=True, db_column='cnpj')\n    nome = models.CharField(blank=True, null=True, max_length=500, db_column='nome')\n    email = models.EmailField(blank=True, null=True, max_length=254, db_column='email')\n    telefone = models.CharField(blank=True, null=True,  max_length=254, db_column='telefone')\n    celular = models.CharField(blank=True, null=True,  max_length=254, db_column='celular')\n    cod_forn = models.CharField(blank=True, null=True, max_length=50, default='', db_column='cod_cli')\n    fax =  models.CharField(blank=True, null=True, max_length=50, db_column='fax')\n    ie = models.CharField(blank=True, null=True, max_length=254, db_column='ie')\n    cep = BRPostalCodeField(blank=True, null=True, db_column='cep')",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "Material",
        "kind": 6,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "class Material(models.Model):\n    nome = models.CharField(blank=True, null=True, max_length=254, db_column='nome')\n    custo = models.IntegerField(blank=True, null=True, db_column='custo')\n    def __str__(self):\n        return self.nome\n    class Meta:\n        verbose_name_plural = _(\"Materiais\")\n        db_table = \"material\"\nclass Linha(models.Model):\n    nome = models.CharField(max_length=254, db_column='nome')",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "Linha",
        "kind": 6,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "class Linha(models.Model):\n    nome = models.CharField(max_length=254, db_column='nome')\n    numero_inicial = models.IntegerField(primary_key=True,db_column=\"numero_inicial\")\n    def __str__(self):\n        return self.nome\n    class Meta:\n      db_table = 'linha'\nclass Item(models.Model):\n    nome = models.CharField(max_length=254, default='')\n    descricao = models.TextField(db_column=\"descricao\")",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "Item",
        "kind": 6,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "class Item(models.Model):\n    nome = models.CharField(max_length=254, default='')\n    descricao = models.TextField(db_column=\"descricao\")\n    material = models.ForeignKey(Material, blank=True, db_column='cod_mat', on_delete=models.CASCADE, related_name=\"materialitem\")\n    def __str__(self):\n        return self.nome\n    class Meta:\n        verbose_name_plural = _(\"Itens\")\n        db_table = 'itens'\nclass Ferramenta(models.Model):",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "Ferramenta",
        "kind": 6,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "class Ferramenta(models.Model):\n    nome = models.CharField(max_length=254, db_column='nome')\n    mm = models.IntegerField( db_column='mm')\n    def __str__(self):\n        return self.nome\n    class Meta:\n        db_table = 'Ferramenta'\nclass Orcamento(models.Model):\n    numero = models.AutoField(primary_key=True, db_column='numero')\n    cliente = models.ForeignKey(Cliente, on_delete=models.CASCADE, db_column='id_cliente', default=0, related_name=\"cliente_orcamento\")",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "Orcamento",
        "kind": 6,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "class Orcamento(models.Model):\n    numero = models.AutoField(primary_key=True, db_column='numero')\n    cliente = models.ForeignKey(Cliente, on_delete=models.CASCADE, db_column='id_cliente', default=0, related_name=\"cliente_orcamento\")\n    ano = models.IntegerField(_('ano'), validators=[MinValueValidator(1984), max_value_current_year], default=datetime.now().year, db_column='ano')\n    item = models.ManyToManyField(Item, blank=True, db_column='cod_item', related_name=\"item_orcamento\")\n    data = models.DateTimeField(default=now ,db_column='data')\n    prazo_entrega = models.DateTimeField(db_column='prazo_entrega', blank=True )\n    prazo_pagamento = models.DateTimeField(db_column='prazo_pagto', blank=True)\n    ipi = models.CharField(max_length=50, db_column='ipi')\n    icms = models.CharField(max_length=50, db_column='icms')",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "Cadastro_OS",
        "kind": 6,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "class Cadastro_OS(models.Model):\n    readonly_fields = (\"Numero_Os\",\"Data\",)\n    UNIDADE = [\n        ('Peça', 'Peça'),\n        ('Jogo', 'Jogo'),\n    ]\n    TIPO = [\n        ('afiacao', 'afiação'),\n        ('fabricacao', 'fabricação'),\n        ('subfabricacao','subfabricação'),",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "Processo",
        "kind": 6,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "class Processo(models.Model):\n    Nome = models.CharField(null=True, blank=True,max_length=254, db_column='Nome')\n    Tempo_Objetivo = models.TimeField(null=True, blank=True, auto_now=False, auto_now_add=False, db_column='Tempo_Objetivo')\n    def __str__(self):\n        return f\"{self.Nome} - {self.Tempo_Objetivo}\"\n    class Meta:\n        db_table = 'processos'\nclass Historico_Os(models.Model):\n    processo = models.ForeignKey(Processo, null=True, blank=True,verbose_name=_(\"Processo\"), on_delete=models.CASCADE, db_column='id_proc')\n    os = models.ForeignKey(Cadastro_OS, null=True, blank=True,verbose_name=_(\"Ordem de Serviço\"), on_delete=models.CASCADE, related_name=\"id_os\", db_column='id_os')",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "Historico_Os",
        "kind": 6,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "class Historico_Os(models.Model):\n    processo = models.ForeignKey(Processo, null=True, blank=True,verbose_name=_(\"Processo\"), on_delete=models.CASCADE, db_column='id_proc')\n    os = models.ForeignKey(Cadastro_OS, null=True, blank=True,verbose_name=_(\"Ordem de Serviço\"), on_delete=models.CASCADE, related_name=\"id_os\", db_column='id_os')\n    inicio = models.TimeField(_(\"Início\"), default=datetime.now().strftime('%H:%M:%S') ,auto_now=False, auto_now_add=False, db_column=\"inicio\")\n    fim =  models.TimeField(_(\"Fim\"), null=True, blank=True,auto_now=False, auto_now_add=False, db_column=\"fim\")\n    ocorrencias = models.TextField(null=True, blank=True, db_column=\"ocorrencias\")\n    periodo = models.IntegerField(null=True, blank=True, db_column=\"periodo\")\n    data = models.DateTimeField(db_column='data', default=now, null=True, blank=True)\n    qtd = models.IntegerField(null=True, blank=True,db_column=\"qtd\")\n    def __str__(self):",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "Diametro_interno",
        "kind": 6,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "class Diametro_interno(models.Model):\n    maximo = models.FloatField(_(\"Máximo\"), null=True, blank=True)\n    minimo = models.FloatField(_(\"Minimo\"), null=True, blank=True)\n    media = models.FloatField(_(\"Média\"),null=True, blank=True, default=((maximo+minimo)/2), editable=False)\n    def __str__(self):\n        return f\"{self.maximo} ~ {self.minimo}\"\n    class Meta:\n        db_table = 'diametro_interno'\n        verbose_name = _(\"Diâmetro interno\")\n        verbose_name_plural = _(\"Diâmetros internos\") ",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "Diametro_externo",
        "kind": 6,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "class Diametro_externo(models.Model):\n    maximo = models.FloatField(_(\"Máximo\"), null=True, blank=True)\n    minimo = models.FloatField(_(\"Minimo\"), null=True, blank=True)\n    media = models.FloatField(_(\"Média\"), null=True, blank=True, default=((maximo+minimo)/2), editable=False)\n    def __str__(self):\n        return f\" {self.maximo} ~ {self.minimo}\"\n    class Meta:\n        db_table = 'diametro_externo'\n        verbose_name = _(\"Diâmetro Externo\")\n        verbose_name_plural = _(\"Diâmetros Externos\") ",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "Calibrador",
        "kind": 6,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "class Calibrador(models.Model): \n    diametro_externo = models.ForeignKey(Diametro_interno, verbose_name=_(\"Diâmetro interno\"),  null=True, blank=True, on_delete=models.CASCADE)\n    diametro_interno = models.ForeignKey(Diametro_externo, verbose_name=_(\"Diâmetro externo\"),  null=True, blank=True, on_delete=models.CASCADE)\n    cliente = models.ForeignKey(Cliente, verbose_name=_(\"Cliente\"), on_delete=models.CASCADE,  null=True, blank=True)\n'''",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "get_last_os",
        "kind": 2,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "def get_last_os():\n    largest = Cadastro_OS.objects.values(\"Numero_Os\").latest('Numero_Os')\n    print(largest['Numero_Os'])\n    if not largest:\n        return 1\n    return largest['Numero_Os'] + 1\ndef get_last_periodo(osid):\n    lastperiodo = Historico_Os.objects.values('periodo').filter(os=osid).latest('periodo')\n    #print(lastperiodo['periodo'])\n    if not lastperiodo:",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "get_last_periodo",
        "kind": 2,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "def get_last_periodo(osid):\n    lastperiodo = Historico_Os.objects.values('periodo').filter(os=osid).latest('periodo')\n    #print(lastperiodo['periodo'])\n    if not lastperiodo:\n        return 1\n    return lastperiodo['periodo'] + 1\ndef set_periodo(osid):\n    return get_last_periodo(osid)\ndef current_year():\n    return datetime.now().year",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "set_periodo",
        "kind": 2,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "def set_periodo(osid):\n    return get_last_periodo(osid)\ndef current_year():\n    return datetime.now().year\ndef max_value_current_year(value):\n    return MaxValueValidator(current_year())(value)    \ndef year_choices():\n    return [(r,r) for r in range(1984, datetime.now().year+1)]\nclass Tipo(models.Model):\n    nome = models.CharField(max_length=254)",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "current_year",
        "kind": 2,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "def current_year():\n    return datetime.now().year\ndef max_value_current_year(value):\n    return MaxValueValidator(current_year())(value)    \ndef year_choices():\n    return [(r,r) for r in range(1984, datetime.now().year+1)]\nclass Tipo(models.Model):\n    nome = models.CharField(max_length=254)\n    quantidade = models.IntegerField()\n    def __str__(self):",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "max_value_current_year",
        "kind": 2,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "def max_value_current_year(value):\n    return MaxValueValidator(current_year())(value)    \ndef year_choices():\n    return [(r,r) for r in range(1984, datetime.now().year+1)]\nclass Tipo(models.Model):\n    nome = models.CharField(max_length=254)\n    quantidade = models.IntegerField()\n    def __str__(self):\n        return self.nome\n    class Meta:",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "year_choices",
        "kind": 2,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "def year_choices():\n    return [(r,r) for r in range(1984, datetime.now().year+1)]\nclass Tipo(models.Model):\n    nome = models.CharField(max_length=254)\n    quantidade = models.IntegerField()\n    def __str__(self):\n        return self.nome\n    class Meta:\n        db_table = \"Tipo\"\nclass Cliente(models.Model):",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "osid",
        "kind": 5,
        "importPath": "pepperadmin.models",
        "description": "pepperadmin.models",
        "peekOfCode": "osid = None\ndef get_last_os():\n    largest = Cadastro_OS.objects.values(\"Numero_Os\").latest('Numero_Os')\n    print(largest['Numero_Os'])\n    if not largest:\n        return 1\n    return largest['Numero_Os'] + 1\ndef get_last_periodo(osid):\n    lastperiodo = Historico_Os.objects.values('periodo').filter(os=osid).latest('periodo')\n    #print(lastperiodo['periodo'])",
        "detail": "pepperadmin.models",
        "documentation": {}
    },
    {
        "label": "render_to_pdf",
        "kind": 2,
        "importPath": "pepperadmin.utils",
        "description": "pepperadmin.utils",
        "peekOfCode": "def render_to_pdf(template_src, context_dict):\n    template = get_template(template_src)\n    context = Context(context_dict)\n    html  = template.render(context)\n    result = BytesIO()\n    pdf = pisa.pisaDocument(StringIO.StringIO(html.encode(\"ISO-8859-1\")), result)\n    if not pdf.err:\n        return HttpResponse(result.getvalue(), content_type='application/pdf')\n    return HttpResponse('We had some errors<pre>%s</pre>' % escape(html))",
        "detail": "pepperadmin.utils",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "peppertools.asgi",
        "description": "peppertools.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "peppertools.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nprint(BASE_DIR)\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'm51l@4%c42^q2c2o9l72o@&nc&@ssr93%yrwn5zj5phf2*)520'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "SECRET_KEY = 'm51l@4%c42^q2c2o9l72o@&nc&@ssr93%yrwn5zj5phf2*)520'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'api',\n    'rest_framework',\n    'rest_framework_simplejwt',\n    'pepperadmin',",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'api',\n    'rest_framework',\n    'rest_framework_simplejwt',\n    'pepperadmin',\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'api',\n    'rest_framework',\n    'rest_framework_simplejwt',\n    'pepperadmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'api',\n    'rest_framework',\n    'rest_framework_simplejwt',\n    'pepperadmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "SITE_ID",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "SITE_ID = 1\nMIDDLEWARE = [\n    'whitenoise.middleware.WhiteNoiseMiddleware',\n    'django.middleware.locale.LocaleMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'whitenoise.middleware.WhiteNoiseMiddleware',\n    'django.middleware.locale.LocaleMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "ROOT_URLCONF = 'peppertools.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates/')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates/')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "WSGI_APPLICATION = 'peppertools.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/3.1/ref/settings/#databases\n'''\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n'''\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': 'd6kvdhu34k8umq', \n        'USER': 'qcntdabesyfjsh', \n        'PASSWORD': '93cc73249e763112e74b3095df765016e73a232d54997f6375a7ac56fc4bfee1',\n        'HOST': 'ec2-54-234-28-165.compute-1.amazonaws.com', \n        'PORT': '5432',\n    }\n}",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n'DEFAULT_AUTHENTICATION_CLASSES': [\n      'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ],\n      'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticated',\n    ],\n}\n# Internationalization\n# https://docs.djangoproject.com/en/3.1/topics/i18n/",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "LANGUAGE_CODE = 'pt-br'\nLOCALE_NAME = 'pt_BR'\nTIME_ZONE = 'America/Sao_Paulo'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nSIMPLE_JWT = {\n'ACCESS_TOKEN_LIFETIME': datetime.timedelta(minutes=3600),\n'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=20),\n'ROTATE_REFRESH_TOKENS': False,",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "LOCALE_NAME",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "LOCALE_NAME = 'pt_BR'\nTIME_ZONE = 'America/Sao_Paulo'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nSIMPLE_JWT = {\n'ACCESS_TOKEN_LIFETIME': datetime.timedelta(minutes=3600),\n'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=20),\n'ROTATE_REFRESH_TOKENS': False,\n'BLACKLIST_AFTER_ROTATION': True,",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "TIME_ZONE = 'America/Sao_Paulo'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nSIMPLE_JWT = {\n'ACCESS_TOKEN_LIFETIME': datetime.timedelta(minutes=3600),\n'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=20),\n'ROTATE_REFRESH_TOKENS': False,\n'BLACKLIST_AFTER_ROTATION': True,\n'ALGORITHM': 'HS256',",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nSIMPLE_JWT = {\n'ACCESS_TOKEN_LIFETIME': datetime.timedelta(minutes=3600),\n'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=20),\n'ROTATE_REFRESH_TOKENS': False,\n'BLACKLIST_AFTER_ROTATION': True,\n'ALGORITHM': 'HS256',\n'SIGNING_KEY': SECRET_KEY,",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\nSIMPLE_JWT = {\n'ACCESS_TOKEN_LIFETIME': datetime.timedelta(minutes=3600),\n'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=20),\n'ROTATE_REFRESH_TOKENS': False,\n'BLACKLIST_AFTER_ROTATION': True,\n'ALGORITHM': 'HS256',\n'SIGNING_KEY': SECRET_KEY,\n'VERIFYING_KEY': None,",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "USE_TZ = True\nSIMPLE_JWT = {\n'ACCESS_TOKEN_LIFETIME': datetime.timedelta(minutes=3600),\n'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=20),\n'ROTATE_REFRESH_TOKENS': False,\n'BLACKLIST_AFTER_ROTATION': True,\n'ALGORITHM': 'HS256',\n'SIGNING_KEY': SECRET_KEY,\n'VERIFYING_KEY': None,\n'AUDIENCE': None,",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "SIMPLE_JWT = {\n'ACCESS_TOKEN_LIFETIME': datetime.timedelta(minutes=3600),\n'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=20),\n'ROTATE_REFRESH_TOKENS': False,\n'BLACKLIST_AFTER_ROTATION': True,\n'ALGORITHM': 'HS256',\n'SIGNING_KEY': SECRET_KEY,\n'VERIFYING_KEY': None,\n'AUDIENCE': None,\n'ISSUER': None,",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "LOCALE_PATHS",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "LOCALE_PATHS = [os.path.join(BASE_DIR, 'locale')]\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nPROJECT_ROOT   =   Path(__file__).resolve(strict=True).parent.parent\nSTATIC_ROOT  =   os.path.join(PROJECT_ROOT, 'staticfiles')\nSTATIC_URL = '/static/'\n# Extra lookup directories for collectstatic to find static files\nSTATICFILES_DIRS = (\n    os.path.join(BASE_DIR, 'static'),\n)",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "STATIC_URL = '/static/'\n# Extra lookup directories for collectstatic to find static files\nSTATICFILES_DIRS = (\n    os.path.join(BASE_DIR, 'static'),\n)\n#  Add configuration for static files storage using whitenoise\nSTATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\nprod_db  =  dj_database_url.config(conn_max_age=500)\nDATABASES['default'].update(prod_db)\ndjango_heroku.settings(locals())",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "STATICFILES_DIRS = (\n    os.path.join(BASE_DIR, 'static'),\n)\n#  Add configuration for static files storage using whitenoise\nSTATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\nprod_db  =  dj_database_url.config(conn_max_age=500)\nDATABASES['default'].update(prod_db)\ndjango_heroku.settings(locals())\n#ALLOWED_HOSTS = ['peppertools.herokuapp.com']\nactivate(TIME_ZONE)",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_STORAGE",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\nprod_db  =  dj_database_url.config(conn_max_age=500)\nDATABASES['default'].update(prod_db)\ndjango_heroku.settings(locals())\n#ALLOWED_HOSTS = ['peppertools.herokuapp.com']\nactivate(TIME_ZONE)",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "#ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "peppertools.settings",
        "description": "peppertools.settings",
        "peekOfCode": "#ALLOWED_HOSTS = ['peppertools.herokuapp.com']\nactivate(TIME_ZONE)",
        "detail": "peppertools.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "peppertools.urls",
        "description": "peppertools.urls",
        "peekOfCode": "urlpatterns = i18n_patterns(\n    # ...\n    path('admin/', admin.site.urls),\n    path('api/', include('api.urls')),\n    # ...\n    # If no prefix is given, use the default language\n    prefix_default_language=False\n)\n#admin.site.site_header = 'Pimentel Ferramentas'",
        "detail": "peppertools.urls",
        "documentation": {}
    },
    {
        "label": "#admin.site.site_header",
        "kind": 5,
        "importPath": "peppertools.urls",
        "description": "peppertools.urls",
        "peekOfCode": "#admin.site.site_header = 'Pimentel Ferramentas'",
        "detail": "peppertools.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "peppertools.wsgi",
        "description": "peppertools.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "peppertools.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'peppertools.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]